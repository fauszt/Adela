/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package triangle;

import java.awt.Color;
import java.awt.ComponentOrientation;
import java.io.File;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

/**
 *
 * @author BM
 */

public class Application extends javax.swing.JFrame {

    ArrayList<Locale> locales = new ArrayList<>();

    String[][] texts = new String[][]
    {
        {"Háromszög egyenlőtlenség", 
         "a+b>c\tb+c>a\ta+c>b\n\nA szerkesztett háromszög", 
         "α+ β+ γ=180°\n\nBármely háromszög belső szöginek összege 180°", 
         "α+ β+ γ=360°\n\nBármely háromszög külső szöginek összege 360°", 
         "α+α’=180°\tβ+β’=180°\tγ+γ’=180°\n\nA háromszög azonos csúcsánál lévő belső és külső szögének összege 180°", 
         "Egyenlő oldalú háromszög", 
         ""},
        {"Triangular inequality", 
         "a+b>c\tb+c>a\ta+c>b\n\nThe edited triangle", 
         "α+ β+ γ=180°\n\nThe angle of any triangle is 180°", 
         "α+ β+ γ=360°\n\nThe sum of the outer angles of any triangle is 360°", 
         "α+α’=180°\tβ+β’=180°\tγ+γ’=180°\n\nThe sum of the inner and outer angles at the same vertex of the triangle is 180°", 
         "Equilateral triangle",
         "",
        },
        {"الثلاثي غير المتساوي", 
         "a+b>c\tb+c>a\ta+c>b\n\nالمثلث المعدل", 
         "α+ β+ γ=180°\n\nزاوية أي مثلث هو 180 درجة", 
         "α+ β+ γ=360°\n\nمجموع الزوايا الخارجية لأي مثلث هو 360 درجة", 
         "α+α’=180°\tβ+β’=180°\tγ+γ’=180°\n\nمجموع الزوايا الداخلية والخارجية في نفس قمة الرأس من المثلث هو 180 درجة", 
         "مثلث متساوي الاضلاع", 
         "",
        },
    };
        
    final int pictureCountMin = 0;
    final int pictureCountMax = 5;
    private byte imageInd = 0;
    private int langCode = 0;

    /**
     * Creates new form Application
     */
    public Application() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(255, 204, 0));  
        initLocales();
        setComponents();        
    }

    private void initLocales() {
        String[][] localeCodes = new String[][]{
            {"hu", "HU"},
            {"en", "GB"},
            {"ar", "YE"}};

        for (String[] localeCode : localeCodes) {
            locales.add(new Locale(localeCode[0], localeCode[1]));
        }
    }
    
    private void setExplainText(){
        explainTextArea.setText(texts[langCode][imageInd]);
    }
    
    private void setImage(){
        imageViewer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/triangle/pictures/" +imageInd+".jpg")));
    }
    
    private void setComponents(){
        setImage();
        setExplainText();
        setButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nextButton = new javax.swing.JButton();
        localeCodeSelector = new javax.swing.JComboBox();
        previousButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        explainTextArea = new javax.swing.JTextPane();
        imageViewer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("triangle/Bundle"); // NOI18N
        setTitle(bundle.getString("Application.title")); // NOI18N
        setBackground(new java.awt.Color(255, 204, 0));
        setName("mainFrame"); // NOI18N

        nextButton.setText(bundle.getString("Application.nextButton.text")); // NOI18N
        nextButton.setName("nextButton"); // NOI18N
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        localeCodeSelector.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Magyar", "English", "عربى" }));
        localeCodeSelector.setToolTipText(bundle.getString("Application.localeCodeSelector.toolTipText")); // NOI18N
        localeCodeSelector.setName("localeCodeSelector"); // NOI18N
        localeCodeSelector.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                localeCodeSelectorItemStateChanged(evt);
            }
        });
        localeCodeSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localeCodeSelectorActionPerformed(evt);
            }
        });

        previousButton.setText(bundle.getString("Application.previousButton.text")); // NOI18N
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setName("explainScroll"); // NOI18N

        explainTextArea.setEditable(false);
        explainTextArea.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        explainTextArea.setText(bundle.getString("Application.explainTextArea.text")); // NOI18N
        jScrollPane2.setViewportView(explainTextArea);

        imageViewer.setBackground(new java.awt.Color(255, 255, 255));
        imageViewer.setForeground(new java.awt.Color(255, 255, 255));
        imageViewer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/triangle/pictures/1.jpg"))); // NOI18N
        imageViewer.setText(bundle.getString("Application.imageViewer.text")); // NOI18N
        imageViewer.setToolTipText(bundle.getString("Application.imageViewer.toolTipText")); // NOI18N
        imageViewer.setFocusable(false);
        imageViewer.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageViewer, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(localeCodeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(localeCodeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nextButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(previousButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageViewer, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        imageInd++;
        setComponents();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void localeCodeSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localeCodeSelectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_localeCodeSelectorActionPerformed

    private void localeCodeSelectorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_localeCodeSelectorItemStateChanged
        final int lIndex = localeCodeSelector.getSelectedIndex();
        Locale l = locales.get(lIndex);
        langCode = lIndex;
        setExplainText();
        ResourceBundle rb = ResourceBundle.getBundle("triangle/Bundle", l);
        nextButton.setText(rb.getString("Application.nextButton.text"));
        previousButton.setText(rb.getString("Application.previousButton.text"));
        localeCodeSelector.setToolTipText(rb.getString("Application.localeCodeSelector.toolTipText"));    
        this.setTitle(rb.getString("Application.title"));        
        
        switch (lIndex) {
            case 0:
            case 1:                                
                explainTextArea.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
                break;
            case 2:                
                explainTextArea.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);                
                break;
            default:                
                explainTextArea.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);                
        }
    }//GEN-LAST:event_localeCodeSelectorItemStateChanged

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        imageInd--;
        setComponents();
    }//GEN-LAST:event_previousButtonActionPerformed

    private void setButtons() {
        previousButton.setEnabled(imageInd > pictureCountMin);
        nextButton.setEnabled(imageInd < pictureCountMax);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane explainTextArea;
    private javax.swing.JLabel imageViewer;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox localeCodeSelector;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton previousButton;
    // End of variables declaration//GEN-END:variables
}
